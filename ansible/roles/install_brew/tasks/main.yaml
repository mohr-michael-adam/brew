- name: Install Linux packages
  apt:
    pkg:
      - python3-dev
      - libbluetooth-dev
      - libcap2-bin
      - git
      - python3-pip
      - python-setuptools
      - logrotate
      - bluetooth
    update_cache: yes

- name: Determine the path to python3
  command: "which python3"
  register: python3_path
  changed_when: false

- name: Fail if we can't get the python3 path
  fail:
    msg: "Unable to determine the path to python3 {{ python3_path }}"
  when: python3_path.rc != 0

- name: Get full path to python3
  stat:
    path: "{{ python3_path.stdout }}"
  register: python3_stat
  changed_when: false

- name: Allow python raw socket access
  shell: "setcap 'cap_net_raw,cap_net_admin+eip' {{ python3_stat.stat.lnk_source }}"
  changed_when: false

- name: Create directory for the code
  file:
    path: /brew
    owner: root
    group: root
    mode: '0644'
    state: directory

- name: Git checkout
  git:
    repo: "https://github.com/mohr-michael-adam/brew.git"
    dest: /brew
  notify: restart brew

- name: Setup log directory
  file:
    path: /var/log/brew
    owner: root
    group: root
    mode: '0644'
    state: directory

- name: Slurp the pip requirements
  slurp:
    src: /brew/requirements.txt
  register: slurped_requirements

- name: Decode the pip requirements
  set_fact:
    raw_requirements: "{{ slurped_requirements['content'] | b64decode  }}"

- name: Parse newlines
  set_fact:
    requirements: "{{ raw_requirements.split('\n') }}"

- name: Install pip requirements
  pip:
    name: "{{ item }}"
    executable: pip3
  with_items: "{{ requirements }}"

# There is a bug in beacontools where it doesn't support Raspberry pi 4 model B.
# https://github.com/citruz/beacontools/issues/63

- name: Determine our version of Raspberry pi
  slurp:
    src: /sys/firmware/devicetree/base/model
  register: slurped_raspberry_pi_version

- name: Monkey patch the beacontools for Raspberry pi 4
  lineinfile:
    path: /usr/local/lib/python3.7/dist-packages/beacontools/scanner.py
    regexp: '^        self.hci_version = self.get_hci_version()'
    line: '        self.hci_version = 8 #self.get_hci_version()'
    owner: root
    group: staff
  when: "'Raspberry Pi 4' in slurped_raspberry_pi_version['content'] | b64decode"

- name: Setup log rotate
  copy:
    dest: /etc/logrotate.d/brew
    src: logrotate
    owner: root
    group: root
    mode: 0600

- name: Create service
  copy:
    src: brew.service
    dest: /lib/systemd/system/brew.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart brew

- name: Make sure brew starts on boot
  service:
    name: brew
    enabled: yes
